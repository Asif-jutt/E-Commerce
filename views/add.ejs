<% layout("./layouts/boilerplate") %>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Product - Admin Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #3a0ca3;
            --secondary: #4361ee;
            --accent: #f72585;
            --light: #f8f9fa;
            --dark: #212529;
            --success: #4cc9f0;
            --text: #2b2d42;
            --gray: #6c757d;
            --transition: all 0.3s ease;
            --shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            --radius: 10px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: #f9f9f9;
            color: var(--text);
            line-height: 1.6;
        }

        /* Push content below navbar */
        main {
            min-height: 70vh;
            padding: 120px 50px 40px; /* top padding = navbar height + spacing */
        }

        /* Admin Panel Layout */
        .admin-container {
            display:flex;
            gap: 30px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .admin-sidebar {
            width: 250px;
            background: white;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 20px;
            height: fit-content;
        }

        .admin-sidebar h3 {
            color: var(--primary);
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid var(--light);
        }

        .admin-menu {
            list-style: none;
        }

        .admin-menu li {
            margin-bottom: 10px;
        }

        .admin-menu a {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 15px;
            color: var(--text);
            text-decoration: none;
            border-radius: var(--radius);
            transition: var(--transition);
        }

        .admin-menu a:hover,
        .admin-menu a.active {
            background: var(--secondary);
            color: white;
        }

        .admin-menu i {
            width: 20px;
            text-align: center;
        }

        .admin-content {
            flex: 1;
            background: white;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 30px;
        }

        .admin-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .admin-title {
            color: var(--primary);
            font-size: 24px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        /* Form Styles */
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group.full-width {
            grid-column: 1 / -1;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--dark);
        }

        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: var(--radius);
            font-size: 16px;
            transition: var(--transition);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--secondary);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }

        textarea.form-control {
            min-height: 120px;
            resize: vertical;
        }

        .btn {
            padding: 12px 25px;
            border-radius: var(--radius);
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
            transition: var(--transition);
            border: none;
            cursor: pointer;
            font-size: 16px;
        }

        .btn-primary {
            background: var(--secondary);
            color: white;
        }

        .btn-primary:hover {
            background: var(--primary);
            transform: translateY(-2px);
        }

        .btn-secondary {
            background: var(--gray);
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
        }

        .form-actions {
            display: flex;
            gap: 15px;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #eee;
        }

        .image-preview {
            margin-top: 20px;
            text-align: center;
        }

        .image-preview img {
            max-width: 100%;
            max-height: 200px;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            border: 1px solid #ddd;
        }

        .url-input-container {
            display: flex;
            gap: 10px;
        }

        .url-input-container .form-control {
            flex: 1;
        }

        .test-image-btn {
            background: var(--accent);
            color: white;
            border: none;
            padding: 12px 15px;
            border-radius: var(--radius);
            cursor: pointer;
            transition: var(--transition);
            white-space: nowrap;
        }

        .test-image-btn:hover {
            background: #d81159;
        }

        .preview-wrapper {
            display: flex;
            gap: 1rem;
            align-items: center;
            margin-top: .5rem;
        }

        #preview-img {
            max-width: 160px;
            max-height: 160px;
            object-fit: cover;
            border-radius: .375rem;
            border: 1px solid #e6e6e6;
        }

        /* Validation styles */
        .was-validated .form-control:valid {
            border-color: #198754;
            padding-right: calc(1.5em + 0.75rem);
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

        .was-validated .form-control:invalid {
            border-color: #dc3545;
            padding-right: calc(1.5em + 0.75rem);
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath d='m5.8 3.6.4.4.4-.4'/%3e%3cpath d='M6 7v2'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            main {
                padding: 120px 30px 40px;
            }

            .admin-container {
                flex-direction: column;
            }

            .admin-sidebar {
                width: 100%;
            }
        }

        @media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }

            .form-actions {
                flex-direction: column;
            }

            .btn {
                width: 100%;
                justify-content: center;
            }

            .url-input-container {
                flex-direction: column;
            }
            
            .preview-wrapper {
                flex-direction: column;
                align-items: flex-start;
            }
        }

        @media (max-width: 576px) {
            main {
                padding: 100px 20px 30px;
            }

            .admin-content {
                padding: 20px;
            }

            .admin-title {
                font-size: 20px;
            }

            .admin-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
        }
    </style>
</head>
<body class="p-4">
    <!-- Page Content -->
    <main>
        <div class="admin-container">
            <!-- Sidebar -->
            <div class="admin-sidebar">
                <h3>Admin Panel</h3>
                <ul class="admin-menu">
                    <li>
                        <a href="/admin"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
                    </li>
                    <li>
                        <a href="/products" class="active"><i class="fas fa-box"></i> Products</a>
                    </li>
                    <li>
                        <a href="/admin/orders"><i class="fas fa-shopping-cart"></i> Orders</a>
                    </li>
                    <li>
                        <a href="/admin"><i class="fas fa-users"></i> Customers</a>
                    </li>
                    <li>
                        <a href="/admin"><i class="fas fa-arrow-left"></i> Back to Store</a>
                    </li>
                </ul>
            </div>

            <!-- Main Content -->
            <div class="admin-content">
                <div class="admin-header">
                    <h1 class="admin-title">
                        <i class="fas fa-plus-circle"></i> Add New Product
                    </h1>
                    <a href="/admin" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Back to Products</a>
                </div>

                <form class="row g-3 needs-validation" id="add-product-form" action="/admin/add" method="POST" novalidate>
                    <div class="col-md-6">
                        <label for="item" class="form-label">Product Name *</label>
                        <input type="text" class="form-control" id="item" name="item" placeholder="Enter product name" required>
                        <div class="valid-feedback">Looks good!</div>
                        <div class="invalid-feedback">Please enter a product name.</div>
                    </div>

                    <div class="col-md-3">
                        <label for="price" class="form-label">Price ($) *</label>
                        <input type="number" class="form-control" id="price" name="price" placeholder="0.00" step="0.01" min="0.01" required>
                        <div class="valid-feedback">Looks good!</div>
                        <div class="invalid-feedback">Please enter a valid price (minimum $0.01).</div>
                    </div>

                    <div class="col-md-3">
                        <label for="stock" class="form-label">Stock Quantity *</label>
                        <input type="number" class="form-control" id="stock" name="stock" placeholder="0" min="0" required>
                        <div class="valid-feedback">Looks good!</div>
                        <div class="invalid-feedback">Please enter stock quantity.</div>
                    </div>

                    <div class="col-12">
                        <label for="image" class="form-label">Image URL *</label>
                        <div class="input-group has-validation">
                            <input type="url" class="form-control" id="image" name="image" placeholder="https://example.com/image.jpg" required>
                            <button type="button" class="btn btn-outline-secondary" id="test-image-btn">Test Image</button>
                            <div class="invalid-feedback" id="image-invalid">Please provide a valid image URL.</div>
                        </div>
                        <div class="preview-wrapper mt-2">
                            <img id="preview-img" src="https://picsum.photos/seed/p2/200/200" alt="preview">
                            <div class="small text-muted" id="preview-text">Image preview will appear here</div>
                        </div>
                    </div>

                    <div class="col-12">
                        <button class="btn btn-primary" type="submit"><i class="fas fa-save"></i> Add Product</button>
                        <button class="btn btn-secondary" type="reset" id="reset-btn"><i class="fas fa-times"></i> Reset Form</button>
                    </div>
                </form>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('add-product-form');
            const imageInput = document.getElementById('image');
            const previewImg = document.getElementById('preview-img');
            const previewText = document.getElementById('preview-text');
            const testImageBtn = document.getElementById('test-image-btn');
            const resetBtn = document.getElementById('reset-btn');
            
            let imageLoaded = false;
            let lastImageUrl = '';
            
            // Test image button functionality
            testImageBtn.addEventListener('click', function() {
                const url = imageInput.value.trim();
                if (!url) {
                    imageInput.setCustomValidity('Please enter an image URL first');
                    imageInput.reportValidity();
                    return;
                }
                
                // Test if the image loads
                const testImg = new Image();
                testImg.onload = function() {
                    previewImg.src = url;
                    previewText.textContent = 'Image preview:';
                    imageLoaded = true;
                    lastImageUrl = url;
                    imageInput.setCustomValidity('');
                    imageInput.classList.remove('is-invalid');
                };
                testImg.onerror = function() {
                    imageInput.setCustomValidity('Cannot load image from this URL');
                    imageInput.reportValidity();
                    previewText.textContent = 'Error: Cannot load image from this URL';
                    imageLoaded = false;
                };
                testImg.src = url;
            });
            
            // Update preview when URL changes
            imageInput.addEventListener('input', function() {
                const url = this.value.trim();
                if (!url) {
                    resetPreview();
                    return;
                }
                
                // Validate URL format
                try {
                    new URL(url);
                    imageInput.setCustomValidity('');
                } catch (_) {
                    imageInput.setCustomValidity('Please enter a valid URL');
                    return;
                }
                
                // Only update preview if it's the same URL that was previously loaded
                if (imageLoaded && url === lastImageUrl) {
                    return;
                }
                
                // Reset preview state
                previewText.textContent = 'Testing image URL...';
                imageLoaded = false;
                
                // Test if the image loads
                const testImg = new Image();
                testImg.onload = function() {
                    previewImg.src = url;
                    previewText.textContent = 'Image preview:';
                    imageLoaded = true;
                    lastImageUrl = url;
                    imageInput.setCustomValidity('');
                };
                testImg.onerror = function() {
                    previewText.textContent = 'Image will be tested when you submit or click "Test Image"';
                    imageLoaded = false;
                };
                testImg.src = url;
            });
            
            // Form validation on submit
            form.addEventListener('submit', function(event) {
                event.preventDefault();
                
                // Check if form is valid
                if (!form.checkValidity()) {
                    event.stopPropagation();
                    form.classList.add('was-validated');
                    return;
                }
                
                // Additional validation for image URL
                const url = imageInput.value.trim();
                if (url && (!imageLoaded || url !== lastImageUrl)) {
                    // Test the image if it hasn't been tested yet
                    const testImg = new Image();
                    testImg.onload = function() {
                        imageLoaded = true;
                        lastImageUrl = url;
                        imageInput.setCustomValidity('');
                        form.submit(); // Submit the form after image is verified
                    };
                    testImg.onerror = function() {
                        imageInput.setCustomValidity('Cannot load image from this URL. Please fix the URL or use a different one.');
                        imageInput.reportValidity();
                        form.classList.add('was-validated');
                    };
                    testImg.src = url;
                } else if (!url) {
                    imageInput.setCustomValidity('Please enter an image URL');
                    imageInput.reportValidity();
                    form.classList.add('was-validated');
                } else {
                    // All validations passed, submit the form
                    form.submit();
                }
            });
            
            // Reset form functionality
            resetBtn.addEventListener('click', function() {
                // Reset the form validation
                form.classList.remove('was-validated');
                
                // Reset the preview after a short delay to ensure form is cleared
                setTimeout(function() {
                    resetPreview();
                }, 10);
            });
            
            // Function to reset the preview
            function resetPreview() {
                previewImg.src = 'https://picsum.photos/seed/p2/200/200';
                previewText.textContent = 'Image preview will appear here';
                imageLoaded = false;
                lastImageUrl = '';
                imageInput.setCustomValidity('');
            }
            
            // Validate fields on input
            const inputs = form.querySelectorAll('input');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    if (input.checkValidity()) {
                        input.classList.remove('is-invalid');
                        input.classList.add('is-valid');
                    } else {
                        input.classList.remove('is-valid');
                        input.classList.add('is-invalid');
                    }
                });
            });
        });
    </script>
</body>
